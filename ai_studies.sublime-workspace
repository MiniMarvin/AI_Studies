{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"el_",
				"el_move"
			],
			[
				"buff",
				"buff_element"
			],
			[
				"move_",
				"move_cost"
			],
			[
				"next",
				"nextState"
			],
			[
				"goal",
				"goal_cost"
			],
			[
				"total",
				"total_cost"
			],
			[
				"getSucc",
				"getSuccessor\t(game.py)"
			],
			[
				"old",
				"old_cost"
			],
			[
				"new",
				"new_cost"
			],
			[
				"cost",
				"cost_list"
			],
			[
				"final",
				"final_seq"
			],
			[
				"final_",
				"final_path"
			],
			[
				"ele",
				"elements"
			],
			[
				"isGoal",
				"isGoalState"
			],
			[
				"isG",
				"isGoalState"
			],
			[
				"getC",
				"getCostOfActions"
			],
			[
				"OUT",
				"out_file"
			],
			[
				"out_",
				"out_file"
			],
			[
				"get_",
				"get_opponent\t(isolation.py)"
			],
			[
				"oppo",
				"opponent"
			],
			[
				"player",
				"player_moves"
			],
			[
				"player_",
				"player_moves"
			],
			[
				"best",
				"best_val"
			],
			[
				"nex",
				"next_state"
			],
			[
				"best_",
				"best_val"
			],
			[
				"Alpha",
				"AlphaBetaPlayer"
			],
			[
				"mvoe",
				"move"
			],
			[
				"get",
				"get_legal_moves\t(isolation.py)"
			],
			[
				"is",
				"is_winner"
			],
			[
				"my",
				"my_moves"
			],
			[
				"my_",
				"my_moves"
			],
			[
				"valid_",
				"valid_boards"
			],
			[
				"valid",
				"valid_moves"
			],
			[
				"play",
				"player"
			],
			[
				"sea",
				"search_depth"
			],
			[
				"possible",
				"possible_paths"
			],
			[
				"apply",
				"apply_move"
			],
			[
				"active",
				"active_player"
			],
			[
				"Play",
				"Player_agent"
			],
			[
				"eval",
				"eval_moves"
			],
			[
				"alph",
				"alpha"
			],
			[
				"alpha",
				"alphabeta"
			],
			[
				"pla",
				"player"
			],
			[
				"vali",
				"valid_moves"
			],
			[
				"asser",
				"assertFalse"
			],
			[
				"appl",
				"apply_move"
			],
			[
				"isol",
				"isolation.Board\t(isolation.py)"
			],
			[
				"ac",
				"active_player\t(isolation.py)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pacman/search/search.py",
			"settings":
			{
				"buffer_size": 10932,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pacman/search/searchAgents.py",
			"settings":
			{
				"buffer_size": 22350,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pacman/search/commands.txt",
			"settings":
			{
				"buffer_size": 1214,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pacman/search/pacman.py",
			"settings":
			{
				"buffer_size": 24258,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "((5, 1), None, None),\n((5, 2), (5, 1), 'North'),\n((6, 2), (5, 2), 'East'),\n((7, 2), (6, 2), 'East'),\n((8, 2), (7, 2), 'East'),\n((9, 2), (8, 2), 'East'),\n((9, 3), (9, 2), 'North'),\n((9, 4), (9, 3), 'North'),\n((8, 4), (9, 4), 'West'),\n((7, 4), (8, 4), 'West'),\n((6, 4), (7, 4), 'West'),\n((5, 4), (6, 4), 'West'),\n((5, 5), (5, 4), 'North'),\n((5, 6), (5, 5), 'North'),\n((5, 7), (5, 6), 'North'),\n((5, 8), (5, 7), 'North'),\n((5, 9), (5, 8), 'North'),\n((5, 10), (5, 9), 'North'),\n((5, 11), (5, 10), 'North'),\n((4, 11), (5, 11), 'West'),\n((3, 11), (4, 11), 'West'),\n((2, 11), (3, 11), 'West'),\n((1, 11), (2, 11), 'West'),\n((201, 210), (1, 11), 'South'),\n((202, 210), (201, 210), 'East'),\n((203, 210), (202, 210), 'East'),\n((204, 210), (203, 210), 'East'),\n((205, 210), (204, 210), 'East'),\n((205, 209), (205, 210), 'South'),\n((205, 208), (205, 209), 'South'),\n((205, 207), (205, 208), 'South'),\n((205, 206), (205, 207), 'South'),\n((205, 205), (205, 206), 'South'),\n((205, 204), (205, 205), 'South'),\n((204, 204), (205, 204), 'West'),\n((203, 204), (204, 204), 'West'),\n((203, 203), (203, 204), 'South'),\n((203, 202), (203, 203), 'South'),\n((202, 202), (203, 202), 'West'),\n((201, 202), (202, 202), 'West'),\n((302, 302), (201, 202), 'East'),\n((303, 302), (302, 302), 'East'),\n((303, 303), (303, 302), 'North'),\n((303, 304), (303, 303), 'North'),\n((304, 304), (303, 304), 'East'),\n((305, 304), (304, 304), 'East'),\n((306, 304), (305, 304), 'East'),\n((307, 304), (306, 304), 'East'),\n((308, 304), (307, 304), 'East'),\n((309, 304), (308, 304), 'East'),\n((310, 304), (309, 304), 'East'),\n((311, 304), (310, 304), 'East'),\n((312, 304), (311, 304), 'East'),\n((313, 304), (312, 304), 'East'),\n((313, 305), (313, 304), 'North'),\n((313, 306), (313, 305), 'North'),\n((312, 306), (313, 306), 'West'),\n((311, 306), (312, 306), 'West'),\n((311, 307), (311, 306), 'North'),\n((311, 308), (311, 307), 'North'),\n((311, 309), (311, 308), 'North'),\n((311, 310), (311, 309), 'North'),\n((312, 310), (311, 310), 'East'),\n((313, 310), (312, 310), 'East'),\n((314, 310), (313, 310), 'East'),\n((315, 310), (314, 310), 'East'),\n((315, 309), (315, 310), 'South'),\n((315, 308), (315, 309), 'South'),\n((316, 308), (315, 308), 'East'),\n((317, 308), (316, 308), 'East'),\n((318, 308), (317, 308), 'East'),\n((318, 309), (318, 308), 'North'),\n((318, 310), (318, 309), 'North'),\n((318, 311), (318, 310), 'North'),\n((318, 312), (318, 311), 'North'),\n((319, 312), (318, 312), 'East'),\n((320, 312), (319, 312), 'East'),\n((321, 312), (320, 312), 'East'),\n((322, 312), (321, 312), 'East'),\n((323, 312), (322, 312), 'East'),\n((324, 312), (323, 312), 'East'),\n((325, 312), (324, 312), 'East'),\n((326, 312), (325, 312), 'East'),\n((326, 311), (326, 312), 'South'),\n((326, 310), (326, 311), 'South'),\n((327, 310), (326, 310), 'East'),\n((328, 310), (327, 310), 'East'),\n((328, 311), (328, 310), 'North'),\n((1128, 1110), (328, 311), 'South'),\n((1127, 1110), (1128, 1110), 'West'),\n((1126, 1110), (1127, 1110), 'West'),\n((1126, 1109), (1126, 1110), 'South'),\n((1126, 1108), (1126, 1109), 'South'),\n((1127, 1108), (1126, 1108), 'East'),\n((1128, 1108), (1127, 1108), 'East'),\n((1128, 1107), (1128, 1108), 'South'),\n((1128, 1106), (1128, 1107), 'South'),\n((1128, 1105), (1128, 1106), 'South'),\n((1128, 1104), (1128, 1105), 'South'),\n((1128, 1103), (1128, 1104), 'South'),\n((1128, 1102), (1128, 1103), 'South'),\n((1528, 1501), (1128, 1102), 'South')]",
			"settings":
			{
				"buffer_size": 3387,
				"line_ending": "Unix",
				"name": "((5, 1), None, None),"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "sspy",
		"selected_items":
		[
			[
				"sspy",
				"Set Syntax: Python"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ssbash",
				"Set Syntax: Shell Script (Bash)"
			]
		],
		"width": 641.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/minimarvin/Documents/studies/ai_studies",
		"/home/minimarvin/Documents/studies/ai_studies/pacman",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search"
	],
	"file_history":
	[
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/out.txt",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/pacmanAgents.py",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/search.py",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/util.py",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/game.py",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/pacman.py",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/searchAgents.py",
		"/home/minimarvin/Documents/studies/ai_studies/ai_studies.sublime-project",
		"/home/minimarvin/Documents/studies/ai_studies/pacman/search/eightpuzzle.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/output_files/process.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/output_files/sum.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/test_launcher.sh",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/game_agent.py",
		"/home/minimarvin/Downloads/train.csv",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/out.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/tournament.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/output_files/out_10.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/output_files/out_3.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/output_files/out_1.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/output_files/out_2.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/out_1.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/out_2.txt",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation-folder/out_file",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/isolation/isolation.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/tests/test_game_agent.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/game_agent.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/sample_players.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/tournament.py",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/.gitignore",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/.gitignore",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/isoviz/display.html",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/isolation-result-180222.json",
		"/home/minimarvin/Documents/studies/ai_studies/minimax/AIND-Isolation/competition_agent.py"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"move",
			"father",
			"el_node",
			"[node]",
			"frontie",
			"frontie ",
			"frontie",
			"trash",
			"buff_goal_node",
			"trash",
			"nexty",
			"'),",
			"buff",
			"while",
			"bit",
			"dy",
			"nextx",
			"dx",
			"node",
			"True",
			"False",
			"corner",
			"getstart",
			"return self.startState",
			"getStartState",
			"your code ",
			"heuristic",
			"heur",
			"heuristic",
			"manhattanheuristic",
			"cost",
			"visited",
			"node",
			"cost_list",
			"costfn",
			"positionsearchproblem",
			"positionsearch",
			"isgoal",
			"top",
			"top(",
			"lst",
			"element",
			"queue",
			"queueu",
			"final_path",
			"future",
			"final_path",
			"st",
			"True",
			"stack",
			"dfs_prob",
			"final_path",
			"father",
			"element_action",
			"nod",
			"element",
			"True",
			"stack",
			"element",
			"Null",
			"lst",
			"return",
			"res",
			"WEST",
			"SOUTH",
			"pos",
			"lst",
			"add",
			"POSITION",
			"STOP",
			"True",
			"SOUTH",
			"lst",
			"nxt",
			"lst",
			"valid_moves",
			"nxt",
			"set",
			"add",
			"push",
			"i",
			"lst",
			"getstartstate",
			"loadAgent",
			"getaction",
			"-p",
			"tiny",
			"seA",
			"tiny",
			"bfs",
			"search",
			"readcommand",
			"rungames",
			"print",
			"total_eval",
			"insert",
			"push_back",
			"16",
			"15",
			"out_file",
			"cpu_agent",
			"NUM_MAT",
			"play_",
			"var",
			"min",
			"opponent",
			"player",
			"opponent",
			"player",
			"bd",
			"best_val",
			"beta",
			"max",
			"alpha",
			"beta",
			"min",
			"beta",
			"if self.time_left < self.TIMER_THRESHOLD:",
			"MinimaxPlayer",
			"if self.time_left() < self.TIMER_THRESHOLD:",
			"time_left",
			"val = end_condition(game",
			"best_score",
			"beta",
			"min",
			"alpha",
			"buff",
			"min"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pacman/search/search.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10932,
						"regions":
						{
						},
						"selection":
						[
							[
								8205,
								8205
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4260.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pacman/search/searchAgents.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22350,
						"regions":
						{
						},
						"selection":
						[
							[
								11270,
								11270
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4710.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pacman/search/commands.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1214,
						"regions":
						{
						},
						"selection":
						[
							[
								1029,
								1086
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pacman/search/pacman.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24258,
						"regions":
						{
						},
						"selection":
						[
							[
								17762,
								17762
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7318.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3387,
						"regions":
						{
						},
						"selection":
						[
							[
								310,
								310
							]
						],
						"settings":
						{
							"auto_name": "((5, 1), None, None),",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ai_studies.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 208.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
